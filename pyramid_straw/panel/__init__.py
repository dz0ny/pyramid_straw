from pyramid_debugtoolbar.panels import DebugPanel


class StrawDebugPanel(DebugPanel):
    """
    Panel that displays the SQL generated by SQLAlchemy and the time, memory
     and calling function.
    """
    name = 'straw'
    template = 'pyramid_straw:templates/straw_debugtoolbar.mako'
    title = 'SQLAlchemy Profiler'
    nav_title = 'SQLAlchemy Profiler'

    def __init__(self, request):
        super(StrawDebugPanel, self).__init__(request)
        self.queries = request.straw_data = []

    @property
    def has_content(self):
        if self.queries:
            return True
        else:
            return False

    @property
    def nav_subtitle(self):
        if self.queries:
            return "{} ({:.3f}ms)".format(len(self.queries), sum(map(lambda x: x['duration'], self.queries)))

    def render_vars(self, request):
        return {'queries':self.queries}


def includeme(config):
    config.registry.settings['debugtoolbar.panels'].append(StrawDebugPanel)
